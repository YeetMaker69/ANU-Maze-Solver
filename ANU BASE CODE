//Define constants
unsigned long frontValue;
unsigned long leftValue;
unsigned long rightValue;

//Sets speed for motors
int leftSpeed = 0;
int rightSpeed = 0;

//Pins for H Bridge
const int motorLeft = ; //pin 1 on H Bridge. Must be analog
const int motorRight = ; //pin 9 on H Bridge. Must be analog
const int left1 = ; //pin 2 on H Bridge
const int left2 = ; //pin 7 on H Bridge
const int right1 = ; //pin 10 on H Bridge
const int right2 = ; //pin 15 on H Bridge

// Right Ultrasonic sensor pins
const int rightTrig = ;
const int rightEcho = ; 
// Left Ultrasonic sensor pins
const int leftTrig = ;
const int leftEcho = ; 
// Front Ultrasonic sensor pins
const int frontTrig = ;
const int frontEcho = ; 


void setup() {
  Serial.begin(9600);
  
  //Pinmodes
  //Pins for the H-bridge
  pinMode(motorLeft, OUTPUT);
  pinMode(motorRight, OUTPUT);
  pinMode(left1, OUTPUT);
  pinMode(left2, OUTPUT);
  pinMode(right1, OUTPUT);
  pinMode(right2, OUTPUT);
  
  //Pins for Ultrasonic Sensors
  pinMode(rightEcho, INPUT);
  pinMode(rightTrig, OUTPUT);
  pinMode(leftEcho, INPUT);
  pinMode(leftTrig, OUTPUT);
  pinMode(frontEcho, INPUT);
  pinMode(frontTrig, OUTPUT);
  
}


void loop() { 
  
}


void fullSpeed() {
  leftSpeed = 255;
  rightSpeed = 255;
  
  //sets motors to full speed by allowing the pwm to be 125/255
  analogWrite(motorLeft, leftSpeed);
  analogWrite(motorRight, rightSpeed);
  
  //Sets the direction the motorspins. Change these to get motor to spin correct way.
  digitalWrite(left1, HIGH);
  digitalWrite(left2, LOW);
  digitalWrite(right1, HIGH);
  digitalWrite(right2, LOW);
}


void halfSpeed() {
  leftSpeed = 125;
  rightSpeed = 125;
  
  //sets motors to half speed by allowing the pwm to be 125/255
  analogWrite(motorLeft, leftSpeed);
  analogWrite(motorRight, rightSpeed);
  
  //Sets the direction the motorspins. Change these to get motor to spin correct way.
  digitalWrite(left1, HIGH);
  digitalWrite(left2, LOW);
  digitalWrite(right1, HIGH);
  digitalWrite(right2, LOW);
}


void noSpeed() {
  leftSpeed = 0;
  rightSpeed = 0;
  
  //sets motors to zero speed by allowing the pwm to be 0/255
  analogWrite(motorLeft, leftSpeed);
  analogWrite(motorRight, rightSpeed);
  
  //Sets the direction the motorspins. Change these to get motor to spin correct way.
  digitalWrite(left1, HIGH);
  digitalWrite(left2, LOW);
  digitalWrite(right1, HIGH);
  digitalWrite(right2, LOW);
}


void adjustLeft() {
  //Lowers the speed of the left wheel to turn the robot left
  leftSpeed = leftSpeed - 5;
  //To turn the robot left and to keep the speed up
  rightSpeed = rightSpeed + 5;
  //To apply the new motorspeed
  analogWrite(motorLeft, leftSpeed);
  analogWrite(motorRight, rightSpeed);
}


void adjustRight() {
  //To turn the robot right and to keep the speed up
  leftSpeed = leftSpeed + 5;
  //Lowers the speed of the right wheel to turn the robot right
  rightSpeed = rightSpeed - 5;
  //To apply the new motorspeed
  analogWrite(motorLeft, leftSpeed);
  analogWrite(motorRight, rightSpeed);
}


void leftSensor() {
  digitalWrite(leftTrig, HIGH);
  delay(10);
  digitalWrite(leftTrig, LOW);
  leftDistance = pulseIn(leftEcho, HIGH);
  if (leftDistance > 11765){
    leftDistance = 11765;
  }

  leftDistance = (340 * leftDistance/2)/10000;
  delay(10);
  pulseIn(leftEcho, LOW);
}


void rightSensor() {
  digitalWrite(rightTrig, HIGH);
  delay(10);
  digitalWrite(rightTrig, LOW);
  rightDistance = pulseIn(rightEcho, HIGH);
  if (rightDistance > 11765){
    rightDistance = 11765;
  }
  rightDistance = (340 * rightDistance/2)/10000;
  delay(10);
  pulseIn(rightEcho, LOW);
}


void frontSensor() {
  digitalWrite(frontTrig, HIGH);
  delay(10);
  digitalWrite(frontTrig, LOW);
  frontDistance = pulseIn(frontEcho, HIGH);
  if (frontDistance > 11765){
    frontDistance = 11765;
  }
  frontDistance = (340 * frontDistance/2)/10000;
  delay(10);
  pulseIn(frontEcho, LOW);
} 



